// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 16.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject5
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Используйте "RecordedMethod1Params" для передачи параметров в этот метод.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinListItem uICourseworkexeListItem = this.UIItemWindow.UIFolderViewWindow.UICourseworkexeListItem;
            WinMenuItem uIОткрытьMenuItem = this.UIItemWindow1.UIКонтекстMenu.UIОткрытьMenuItem;
            WinEdit uINumericUpDownEdit = this.UIБинарныйпоискWindow.UINumericUpDownSpinner.UINumericUpDownEdit;
            WinClient uIБинарныйпоискClient = this.UIБинарныйпоискWindow.UIБинарныйпоискClient;
            WinButton uIВвестиButton = this.UIБинарныйпоискWindow.UIВвестиWindow.UIВвестиButton;
            WinButton uIСортироватьButton = this.UIБинарныйпоискWindow.UIСортироватьWindow.UIСортироватьButton;
            #endregion

            // Правая-Щелкните "coursework.exe" элемент списка
            Mouse.Click(uICourseworkexeListItem, MouseButtons.Right, ModifierKeys.None, new Point(31, 36));

            // Щелкните "Открыть" элемент меню
            Mouse.Click(uIОткрытьMenuItem, new Point(30, 12));

            // Перемещение  "NumericUpDown" надпись в "Бинарный поиск" клиент
            uIБинарныйпоискClient.EnsureClickable(new Point(37, 86));
            Mouse.StartDragging(uINumericUpDownEdit, new Point(65, 4));
            Mouse.StopDragging(uIБинарныйпоискClient, new Point(37, 86));

            // Тип "-3,14" в "NumericUpDown" надпись
            Keyboard.SendKeys(uINumericUpDownEdit, this.RecordedMethod1Params.UINumericUpDownEditSendKeys, ModifierKeys.None);

            // Щелкните "Ввести" кнопка
            Mouse.Click(uIВвестиButton, new Point(10, 19));

            // Перемещение  "NumericUpDown" надпись в "Бинарный поиск" клиент
            uIБинарныйпоискClient.EnsureClickable(new Point(11, 84));
            Mouse.StartDragging(uINumericUpDownEdit, new Point(76, 11));
            Mouse.StopDragging(uIБинарныйпоискClient, new Point(11, 84));

            // Тип "{Back}5" в "NumericUpDown" надпись
            Keyboard.SendKeys(uINumericUpDownEdit, this.RecordedMethod1Params.UINumericUpDownEditSendKeys1, ModifierKeys.None);

            // Щелкните "Ввести" кнопка
            Mouse.Click(uIВвестиButton, new Point(25, 14));

            // Перемещение  "NumericUpDown" надпись в "Бинарный поиск" клиент
            uIБинарныйпоискClient.EnsureClickable(new Point(35, 81));
            Mouse.StartDragging(uINumericUpDownEdit, new Point(68, 6));
            Mouse.StopDragging(uIБинарныйпоискClient, new Point(35, 81));

            // Тип "{Back}600" в "NumericUpDown" надпись
            Keyboard.SendKeys(uINumericUpDownEdit, this.RecordedMethod1Params.UINumericUpDownEditSendKeys2, ModifierKeys.None);

            // Щелкните "Ввести" кнопка
            Mouse.Click(uIВвестиButton, new Point(37, 17));

            // Перемещение  "NumericUpDown" надпись в "Бинарный поиск" клиент
            uIБинарныйпоискClient.EnsureClickable(new Point(35, 90));
            Mouse.StartDragging(uINumericUpDownEdit, new Point(73, 8));
            Mouse.StopDragging(uIБинарныйпоискClient, new Point(35, 90));

            // Тип "{Back}-56" в "NumericUpDown" надпись
            Keyboard.SendKeys(uINumericUpDownEdit, this.RecordedMethod1Params.UINumericUpDownEditSendKeys3, ModifierKeys.None);

            // Щелкните "Ввести" кнопка
            Mouse.Click(uIВвестиButton, new Point(28, 8));

            // Перемещение  "NumericUpDown" надпись в "Бинарный поиск" клиент
            uIБинарныйпоискClient.EnsureClickable(new Point(37, 87));
            Mouse.StartDragging(uINumericUpDownEdit, new Point(46, 3));
            Mouse.StopDragging(uIБинарныйпоискClient, new Point(37, 87));

            // Тип "{Back}-43,545" в "NumericUpDown" надпись
            Keyboard.SendKeys(uINumericUpDownEdit, this.RecordedMethod1Params.UINumericUpDownEditSendKeys4, ModifierKeys.None);

            // Щелкните "Ввести" кнопка
            Mouse.Click(uIВвестиButton, new Point(29, 15));

            // Щелкните "Сортировать" кнопка
            Mouse.Click(uIСортироватьButton, new Point(81, 9));
        }
        
        /// <summary>
        /// AssertSort - Используйте "AssertSortExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void AssertSort()
        {
            #region Variable Declarations
            WinEdit uIRichTextBox2Edit = this.UIБинарныйпоискWindow.UIRichTextBox2Window.UIRichTextBox2Edit;
            #endregion
            

            Assert.AreEqual("-56 -43,545 -3,14 5 600 \r", uIRichTextBox2Edit.Text,"Не корректная сортировка");
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual AssertSortExpectedValues AssertSortExpectedValues
        {
            get
            {
                if ((this.mAssertSortExpectedValues == null))
                {
                    this.mAssertSortExpectedValues = new AssertSortExpectedValues();
                }
                return this.mAssertSortExpectedValues;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIБинарныйпоискWindow UIБинарныйпоискWindow
        {
            get
            {
                if ((this.mUIБинарныйпоискWindow == null))
                {
                    this.mUIБинарныйпоискWindow = new UIБинарныйпоискWindow();
                }
                return this.mUIБинарныйпоискWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private AssertSortExpectedValues mAssertSortExpectedValues;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIБинарныйпоискWindow mUIБинарныйпоискWindow;
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "RecordedMethod1"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Тип "-3,14" в "NumericUpDown" надпись
        /// </summary>
        public string UINumericUpDownEditSendKeys = "-3,14";
        
        /// <summary>
        /// Тип "5" в "NumericUpDown" надпись
        /// </summary>
        public string UINumericUpDownEditSendKeys1 = "5";
        
        /// <summary>
        /// Тип "600" в "NumericUpDown" надпись
        /// </summary>
        public string UINumericUpDownEditSendKeys2 = "600";
        
        /// <summary>
        /// Тип "-56" в "NumericUpDown" надпись
        /// </summary>
        public string UINumericUpDownEditSendKeys3 = "-56";
        
        /// <summary>
        /// Тип "-43,545" в "NumericUpDown" надпись
        /// </summary>
        public string UINumericUpDownEditSendKeys4 = "-43,545";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AssertSort"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class AssertSortExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство ControlId "richTextBox2" надпись равняется "-56 -43,545 -3,14 5 600"
        /// </summary>
        public string UIRichTextBox2EditControlId = "-56 -43,545 -3,14 5 600";
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Рабочий стол 1";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIFolderViewWindow UIFolderViewWindow
        {
            get
            {
                if ((this.mUIFolderViewWindow == null))
                {
                    this.mUIFolderViewWindow = new UIFolderViewWindow(this);
                }
                return this.mUIFolderViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIFolderViewWindow mUIFolderViewWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIFolderViewWindow : WinWindow
    {
        
        public UIFolderViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            #endregion
        }
        
        #region Properties
        public WinListItem UICourseworkexeListItem
        {
            get
            {
                if ((this.mUICourseworkexeListItem == null))
                {
                    this.mUICourseworkexeListItem = new WinListItem(this);
                    #region Условия поиска
                    this.mUICourseworkexeListItem.SearchProperties[WinListItem.PropertyNames.Name] = "coursework.exe";
                    #endregion
                }
                return this.mUICourseworkexeListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUICourseworkexeListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Контекст";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIКонтекстMenu UIКонтекстMenu
        {
            get
            {
                if ((this.mUIКонтекстMenu == null))
                {
                    this.mUIКонтекстMenu = new UIКонтекстMenu(this);
                }
                return this.mUIКонтекстMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIКонтекстMenu mUIКонтекстMenu;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIКонтекстMenu : WinMenu
    {
        
        public UIКонтекстMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Контекст";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIОткрытьMenuItem
        {
            get
            {
                if ((this.mUIОткрытьMenuItem == null))
                {
                    this.mUIОткрытьMenuItem = new WinMenuItem(this);
                    #region Условия поиска
                    this.mUIОткрытьMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Открыть";
                    #endregion
                }
                return this.mUIОткрытьMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIОткрытьMenuItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIБинарныйпоискWindow : WinWindow
    {
        
        public UIБинарныйпоискWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Бинарный поиск";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Бинарный поиск");
            #endregion
        }
        
        #region Properties
        public UINumericUpDownSpinner UINumericUpDownSpinner
        {
            get
            {
                if ((this.mUINumericUpDownSpinner == null))
                {
                    this.mUINumericUpDownSpinner = new UINumericUpDownSpinner(this);
                }
                return this.mUINumericUpDownSpinner;
            }
        }
        
        public WinClient UIБинарныйпоискClient
        {
            get
            {
                if ((this.mUIБинарныйпоискClient == null))
                {
                    this.mUIБинарныйпоискClient = new WinClient(this);
                    #region Условия поиска
                    this.mUIБинарныйпоискClient.SearchProperties[WinControl.PropertyNames.Name] = "Бинарный поиск";
                    this.mUIБинарныйпоискClient.WindowTitles.Add("Бинарный поиск");
                    #endregion
                }
                return this.mUIБинарныйпоискClient;
            }
        }
        
        public UIВвестиWindow UIВвестиWindow
        {
            get
            {
                if ((this.mUIВвестиWindow == null))
                {
                    this.mUIВвестиWindow = new UIВвестиWindow(this);
                }
                return this.mUIВвестиWindow;
            }
        }
        
        public UINumericUpDown1Window UINumericUpDown1Window
        {
            get
            {
                if ((this.mUINumericUpDown1Window == null))
                {
                    this.mUINumericUpDown1Window = new UINumericUpDown1Window(this);
                }
                return this.mUINumericUpDown1Window;
            }
        }
        
        public UIСортироватьWindow UIСортироватьWindow
        {
            get
            {
                if ((this.mUIСортироватьWindow == null))
                {
                    this.mUIСортироватьWindow = new UIСортироватьWindow(this);
                }
                return this.mUIСортироватьWindow;
            }
        }
        
        public UIRichTextBox2Window UIRichTextBox2Window
        {
            get
            {
                if ((this.mUIRichTextBox2Window == null))
                {
                    this.mUIRichTextBox2Window = new UIRichTextBox2Window(this);
                }
                return this.mUIRichTextBox2Window;
            }
        }
        #endregion
        
        #region Fields
        private UINumericUpDownSpinner mUINumericUpDownSpinner;
        
        private WinClient mUIБинарныйпоискClient;
        
        private UIВвестиWindow mUIВвестиWindow;
        
        private UINumericUpDown1Window mUINumericUpDown1Window;
        
        private UIСортироватьWindow mUIСортироватьWindow;
        
        private UIRichTextBox2Window mUIRichTextBox2Window;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UINumericUpDownSpinner : WinSpinner
    {
        
        public UINumericUpDownSpinner(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinSpinner.PropertyNames.Name] = "NumericUpDown";
            this.WindowTitles.Add("Бинарный поиск");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumericUpDownEdit
        {
            get
            {
                if ((this.mUINumericUpDownEdit == null))
                {
                    this.mUINumericUpDownEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUINumericUpDownEdit.SearchProperties[WinEdit.PropertyNames.Name] = "NumericUpDown";
                    this.mUINumericUpDownEdit.WindowTitles.Add("Бинарный поиск");
                    #endregion
                }
                return this.mUINumericUpDownEdit;
            }
        }
        
        public WinWindow UIItem000000Window
        {
            get
            {
                if ((this.mUIItem000000Window == null))
                {
                    this.mUIItem000000Window = new WinWindow(this);
                    #region Условия поиска
                    this.mUIItem000000Window.SearchProperties[WinWindow.PropertyNames.Name] = "0,00000";
                    this.mUIItem000000Window.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUIItem000000Window.WindowTitles.Add("Бинарный поиск");
                    #endregion
                }
                return this.mUIItem000000Window;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumericUpDownEdit;
        
        private WinWindow mUIItem000000Window;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIВвестиWindow : WinWindow
    {
        
        public UIВвестиWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button1";
            this.WindowTitles.Add("Бинарный поиск");
            #endregion
        }
        
        #region Properties
        public WinButton UIВвестиButton
        {
            get
            {
                if ((this.mUIВвестиButton == null))
                {
                    this.mUIВвестиButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIВвестиButton.SearchProperties[WinButton.PropertyNames.Name] = "Ввести";
                    this.mUIВвестиButton.WindowTitles.Add("Бинарный поиск");
                    #endregion
                }
                return this.mUIВвестиButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIВвестиButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UINumericUpDown1Window : WinWindow
    {
        
        public UINumericUpDown1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numericUpDown1";
            this.WindowTitles.Add("Бинарный поиск");
            #endregion
        }
        
        #region Properties
        public WinSpinner UINumericUpDownSpinner
        {
            get
            {
                if ((this.mUINumericUpDownSpinner == null))
                {
                    this.mUINumericUpDownSpinner = new WinSpinner(this);
                    #region Условия поиска
                    this.mUINumericUpDownSpinner.SearchProperties[WinSpinner.PropertyNames.Name] = "NumericUpDown";
                    this.mUINumericUpDownSpinner.WindowTitles.Add("Бинарный поиск");
                    #endregion
                }
                return this.mUINumericUpDownSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WinSpinner mUINumericUpDownSpinner;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIСортироватьWindow : WinWindow
    {
        
        public UIСортироватьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button2";
            this.WindowTitles.Add("Бинарный поиск");
            #endregion
        }
        
        #region Properties
        public WinButton UIСортироватьButton
        {
            get
            {
                if ((this.mUIСортироватьButton == null))
                {
                    this.mUIСортироватьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIСортироватьButton.SearchProperties[WinButton.PropertyNames.Name] = "Сортировать";
                    this.mUIСортироватьButton.WindowTitles.Add("Бинарный поиск");
                    #endregion
                }
                return this.mUIСортироватьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIСортироватьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIRichTextBox2Window : WinWindow
    {
        
        public UIRichTextBox2Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "richTextBox2";
            this.WindowTitles.Add("Бинарный поиск");
            #endregion
        }
        
        #region Properties
        public WinEdit UIRichTextBox2Edit
        {
            get
            {
                if ((this.mUIRichTextBox2Edit == null))
                {
                    this.mUIRichTextBox2Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUIRichTextBox2Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Введенные числа";
                    this.mUIRichTextBox2Edit.WindowTitles.Add("Бинарный поиск");
                    #endregion
                }
                return this.mUIRichTextBox2Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIRichTextBox2Edit;
        #endregion
    }
}
